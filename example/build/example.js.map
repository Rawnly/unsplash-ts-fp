{
  "version": 3,
  "sources": ["../example.ts", "../../src/api/endpoints/photos.ts", "../../src/api/client.ts", "../../src/utils/string.ts", "../../src/utils/url.ts", "../../src/types/common-codecs.ts", "../../src/entities/Photo.ts", "../../src/entities/generic.ts", "../../src/index.ts"],
  "sourcesContent": ["import { pipe } from 'fp-ts/lib/function';\nimport * as TE from 'fp-ts/TaskEither'\nimport * as E from 'fp-ts/Either'\n\nimport Unsplash from '../src';\nimport * as A from 'fp-ts/Array'\n\n\nconst unsplash = new Unsplash( 'e16e0a00f80aa7f1d491201d5db32bfdfd801d9be57b05a2b959436432e55d71' )\n\nconst program = pipe(\n\t{ count: 1 },\n\tunsplash.photos.random,\n\n)\n\n;( async () => {\n\tconst result = await program()\n\n\tif ( E.isRight( result ) ) {\n\t\tconst { right: photos } = result\n\n\t\tconsole.log( `${photos.length} Photos` )\n\n\t\tfor ( const photo of photos ) {\n\t\t\tconsole.log( `${photo.id} by @${photo.user.username}` );\n\n\t\t}\n\t} else {\n\t\tconsole.log( 'Error', result.left )\n\t}\n\n} )()\n", "import qs from 'querystring'\n\nimport { pipe } from 'fp-ts/lib/function'\nimport * as R from 'fp-ts/Reader'\nimport * as TE from 'fp-ts/TaskEither'\nimport * as RTE from 'fp-ts/ReaderTaskEither'\nimport * as t from 'io-ts'\n\nimport { Credentials, request } from '@api/client'\nimport Photo, { Photo as PhotoV } from '@src/entities/Photo'\n\nimport { ArrayFromString, PhotosCount } from '@src/types/common-codecs'\n\nconst RandomPhotoParams = t.partial( {\n\tcollections: ArrayFromString,\n\ttopics: ArrayFromString,\n\tusername: t.string,\n\torientation: t.union( [t.literal( 'landscape' ), t.literal( 'portrait' ), t.literal( 'squarish' )] ),\n\tcontent_filter: t.union( [t.literal( 'low' ), t.literal( 'high' )] ),\n\tcount: PhotosCount,\n} )\n\nexport type RandomPhotoParams = t.TypeOf<typeof RandomPhotoParams>\n\ntype StringedPhotoParams = Omit<RandomPhotoParams, 'collections' | 'topics'> & {\n\tcollections?: string\n\ttopics?: string\n}\n\n\nconst PhotosListParams = t.partial( {\n\tpage: t.number,\n\tper_page: t.number,\n\torder_by: t.number,\n} )\n\nexport type PhotosListParams = t.TypeOf<typeof PhotosListParams>\n\nexport const getPhotos = ( params: PhotosListParams = { } ): RTE.ReaderTaskEither<Credentials, Error, Photo[]> =>\n\tpipe(\n\t\tR.ask<Credentials>(),\n\t\tR.map(\n\t\t\tpipe(\n\t\t\t\tparams,\n\t\t\t\trequest<Photo[], PhotosListParams>( '/photos' ),\n\t\t\t),\n\t\t),\n\t\tR.chainFirst(\n\t\t\tTE.map( t.array( PhotoV ).decode )\n\t\t)\n\t)\n\n/**\n * Get photo by ID\n *\n * @param {Credentials} credentials\n * @returns {P.TPhoto}\n */\n\n\nexport const getPhoto = ( id: string ): RTE.ReaderTaskEither<Credentials, Error, Photo> =>\n\tpipe(\n\t\tR.ask<Credentials>(),\n\t\tR.map(\n\t\t\tpipe(\n\t\t\t\t{ id },\n\t\t\t\trequest<Photo, { id: string }>( '/photos/:id' ),\n\t\t\t)\n\t\t),\n\t\tR.chainFirst( te =>\n\t\t\tpipe(\n\t\t\t\tte,\n\t\t\t\tTE.map( data => PhotoV.decode( data ) )\n\t\t\t)\n\t\t)\n\t)\n\n/**\n * Get a random photo\n * @param {Credentials} credentials\n * @returns {P.TPhoto[]}\n */\n\nexport const getRandom = ( params: RandomPhotoParams = { count: 1 } ): RTE.ReaderTaskEither<Credentials, Error, Photo[]> =>\n\tpipe(\n\t\tR.ask<Credentials>(),\n\t\tR.map(\n\t\t\tpipe(\n\t\t\t\tparams,\n\t\t\t\tRandomPhotoParams.encode,\n\t\t\t\trequest<Photo[], StringedPhotoParams>( '/photos/random' ),\n\t\t\t)\n\t\t),\n\t\tR.chainFirst(\n\t\t\tTE.map( t.array( PhotoV ).decode )\n\t\t)\n\t)\n", "import axios from 'axios'\n\n\nimport * as R from 'fp-ts/Reader'\nimport * as E from 'fp-ts/Either'\nimport * as RTE from 'fp-ts/ReaderTaskEither'\nimport * as TE from 'fp-ts/TaskEither'\nimport * as S from '@utils/string'\n\nimport { pipe } from 'fp-ts/lib/function';\nimport { string } from 'fp-ts'\n\n\nconst api = axios.create( {\n\tbaseURL: 'https://api.unsplash.com',\n} )\n\n\n\nexport type Credentials = { clientId: string; clientSecret?: string }\n\ntype URL = string;\ntype Params = Record<string, any>\n\nexport const request = <T, U extends Params = any>( url: URL ): R.Reader<U, RTE.ReaderTaskEither<Credentials, Error, T>> => pipe(\n\tR.ask<U>(),\n\tR.map( ( params ) =>\n\t\tpipe(\n\t\t\tR.ask<Credentials>(),\n\t\t\tR.map( credentials =>\n\t\t\t\tpipe(\n\t\t\t\t\turl,\n\t\t\t\t\tS.template( params ?? {} ),\n\t\t\t\t\tTE.tryCatchK(\n\t\t\t\t\t\tu => api.get<T>( u, getConfiguration( credentials ) ),\n\t\t\t\t\t\tE.toError\n\t\t\t\t\t),\n\t\t\t\t\tTE.map( response => response.data )\n\t\t\t\t)\n\t\t\t)\n\t\t)\n\t)\n)\n\n\nexport const getConfiguration = ( credentials: Credentials ): { headers: Record<string, string> } => ( {\n\theaders: {\n\t\tAuthorization: `Client-ID ${credentials.clientId}`,\n\t},\n} )\n", "import qs from 'querystring'\n\nimport * as A from 'fp-ts/lib/Array'\nimport * as RE from 'fp-ts/lib/Record'\nimport * as R from 'fp-ts/Reader'\nimport { pipe } from 'fp-ts/function'\nimport { addQuery } from './url'\n\ntype FunctionalReplace = ( searchValue: string | RegExp, replaceValue: ( ( substring: string, ...params: any[] ) => string ) ) => ( string: string ) => string\n\nexport const replace: FunctionalReplace = ( searchValue: string | RegExp, replaceValue: ( ( substring: string, ...params: any[] ) => string ) ) => ( string: string ) => string.replace( searchValue, replaceValue )\n\nexport const template = ( params: Record<string, any> ): R.Reader<string, string> =>  {\n\tconst usedParams: Record<string, boolean> = {}\n\n\treturn pipe(\n\t\tR.ask<string>(),\n\t\tR.map( template =>\n\t\t\tpipe(\n\t\t\t\ttemplate,\n\t\t\t\treplace( /:(\\w+)/g, ( _, k ) => {\n\t\t\t\t\tusedParams[k] = true\n\n\t\t\t\t\treturn params[k]\n\t\t\t\t} ),\n\t\t\t\tpipe(\n\t\t\t\t\tparams,\n\t\t\t\t\tRE.keys,\n\t\t\t\t\tA.filter( k => !usedParams[k] && params[k] !== undefined ),\n\t\t\t\t\tA.reduce( {}, ( query, key ) => ( { ...query, [key]: params[key] } ) ),\n\t\t\t\t\tqs.stringify,\n\t\t\t\t\taddQuery\n\t\t\t\t)\n\t\t\t)\n\t\t)\n\t)\n}\n", "export const addQuery = ( query: string ) => ( url: string ): string =>\n\tquery\n\t\t? url + '?' + query\n\t\t: url\n", "import * as t from 'io-ts'\nimport * as E from 'fp-ts/Either'\n\nimport { pipe } from 'fp-ts/lib/function'\nimport { number } from 'fp-ts'\n\nexport const StringFromArray = new t.Type<string, string[]>(\n\t'StringFromArray',\n\t( s ): s is string => typeof s === 'string',\n\t( s,c ) =>\n\t\tpipe(\n\t\t\tt.array( t.string )\n\t\t\t\t.validate( s,c ),\n\t\t\tE.chain( s2 => {\n\t\t\t\tconst joinedString = s2.join( ',' )\n\n\t\t\t\tif ( joinedString.length > 1 ) {\n\t\t\t\t\treturn t.success( joinedString )\n\t\t\t\t}\n\n\t\t\t\treturn t.failure( s2, c )\n\t\t\t} )\n\t\t)\n\t,\n\ts => s.split( ',' )\n)\n\nexport const ArrayFromString = new t.Type<string[], string>(\n\t'ArrayFromString',\n\t( s ): s is string[] => t.array( t.string )\n\t\t.is( s ),\n\t( s,c ) =>\n\t\tpipe(\n\t\t\tt.string\n\t\t\t\t.validate( s,c ),\n\t\t\tE.chain( s2 => {\n\t\t\t\tconst splittedString = s2.split( ',' )\n\n\t\t\t\tif ( splittedString.length > 1 ) {\n\t\t\t\t\treturn t.success( splittedString )\n\t\t\t\t}\n\n\t\t\t\treturn t.failure( s2, c )\n\t\t\t} )\n\t\t)\n\t,\n\ts => s.join( ',' )\n)\n\nexport const PhotosCount = new t.Type<number, number>(\n\t'PhotosCount',\n\tt.number.is,\n\t( s, c ) =>\n\t\tpipe(\n\t\t\tt.number.validate( s,c ),\n\t\t\tE.chain( n => n >= 1 && n <= 30\n\t\t\t\t? t.success( n )\n\t\t\t\t: t.failure( n,c )\n\t\t\t)\n\t\t)\n\t,\n\tt.number.encode\n)\n\n\nexport const DateFromString = new t.Type<Date, string>(\n\t'DateFromString',\n\t( d ): d is Date => d instanceof Date,\n\t( d, c ) => pipe(\n\t\tt.string.validate( d, c ),\n\t\tE.chain( s => {\n\t\t\tconst date = new Date( s )\n\n\t\t\tif ( date.toString() === 'Invalid Date' ) {\n\t\t\t\treturn t.failure( s, c )\n\t\t\t}\n\n\t\t\treturn t.success( date )\n\t\t} )\n\t),\n\td => d.toLocaleString()\n)\n\nexport const FloatFromString = new t.Type<number, string>(\n\t'FloatFromString',\n\tt.number.is,\n\t( i ,c ) => pipe(\n\t\tt.string.validate( i, c ),\n\t\tE.chain( s => {\n\t\t\tconst  n =parseFloat( s )\n\n\t\t\treturn isNaN( n ) ? t.failure( s, c ) : t.success( n )\n\t\t} )\n\t),\n\tn => n.toString()\n)\n", "import { DateFromString } from '@src/types/common-codecs'\nimport * as t from 'io-ts'\nimport * as G from './generic'\n\nexport const Exif = t.type( {\n\tmake: t.string,\n\tmodel: t.string,\n\texposure_time: t.string,\n\taperture: t.string,\n\tfocal_length: t.string,\n\tiso: t.number,\n} )\n\nexport const Location = t.type( {\n\tcity: t.string,\n\tcountry: t.string,\n\tposition: t.type( {\n\t\tlatitude: t.number,\n\t\tlongitude: t.number,\n\t} ),\n} )\n\nexport const CurrentUserCollection = t.type( {\n\tid: t.number,\n\ttitle: t.string,\n\tpublished_at: t.string,\n\tlast_collected_at: t.string,\n\tupdated_at: t.string,\n\tcover_photo: t.null,\n\tuser: t.null,\n} )\n\nexport const User = t.type( {\n\tid: t.string,\n\tusername: t.string,\n\tname: t.string,\n\tportfolio_url: t.union( [t.string, t.null] ),\n\tbio: t.string,\n\tlocation: t.string,\n\ttotal_likes: t.number,\n\ttotal_photos: t.number,\n\ttotal_collections: t.number,\n\tinstagram_username: t.union( [t.string, t.null] ),\n\ttwitter_username: t.union( [t.string, t.null] ),\n\tprofile_image: t.type( {\n\t\tsmall: t.string,\n\t\tmedium: t.string,\n\t\tlarge: t.string,\n\t} ),\n\tlinks: t.intersection( [G.Links, t.type( {\n\t\tphotos: t.string,\n\t\tlikes: t.string,\n\t\tportfolio: t.string,\n\t} )] ),\n} )\n\nexport const Photo = t.type( {\n\tid: t.string,\n\tcreated_at: DateFromString,\n\tupdated_at: DateFromString,\n\twidth: t.number,\n\theight: t.number,\n\tcolor: t.string,\n\tblur_hash: t.string,\n\tdownloads: t.number,\n\tlikes: t.number,\n\tliked_by_user: t.boolean,\n\tdescription: t.union( [t.string, t.null] ),\n\texif: Exif,\n\tlocation: Location,\n\ttags: t.array( G.Tag ),\n\tcurrent_user_collections: t.array( CurrentUserCollection ),\n\turls: t.type( {\n\t\traw: t.string,\n\t\tfull: t.string,\n\t\tregular: t.string,\n\t\tsmall: t.string,\n\t\tthumb: t.string,\n\t} ),\n\tlinks: t.intersection( [G.Links, t.type( {\n\t\tdownload: t.string,\n\t\tdownload_location: t.string,\n\t} )] ),\n\tuser: User,\n} )\n\n\ntype TPhoto = t.TypeOf<typeof Photo>\nexport default TPhoto;\n", "import * as t from 'io-ts'\n\n/** Tags */\nexport const Tag = t.type( {\n\ttitle: t.string,\n} )\n\n/**\n * Generic links interface\n */\nexport const Links = t.type( {\n\tself: t.string,\n\thtml: t.string,\n} )\n", "import { Credentials } from './api/client'\nimport * as P from './api/endpoints/photos'\n\nclass Unsplash {\n\tconstructor( private clientId: string ) {}\n\n\tget credentials(): Credentials {\n\t\treturn {\n\t\t\tclientId: this.clientId,\n\t\t}\n\t}\n\n\tphotos = {\n\t\tall: ( params?: P.PhotosListParams ) => P.getPhotos( params )( this.credentials ),\n\t\trandom: ( params?: P.RandomPhotoParams ) => P.getRandom( params )( this.credentials ),\n\t\tget: ( id: string ) => P.getPhoto( id )( this.credentials ),\n\t}\n}\n\nexport default Unsplash\n"],
  "mappings": "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",
  "names": []
}
